@model Nop.Plugin.Widgets.StoreLocator.ConfigurationModel

@{
    Layout = "";

}

@using Nop.Core.Infrastructure;
@using Nop.Web.Framework;
@using Nop.Web.Framework.UI;

<script type="text/javascript">
    $(document).ready(function () {
        toggleStoreUrl();
        $("#@Html.FieldIdFor(model => model.Page)").click(toggleStoreUrl);

    });

    function toggleStoreUrl() {
        if ($('#@Html.FieldIdFor(model => model.Page)').is(':checked')) {
            $('#trStoreUrl').show();
        }
        else {
            $('#trStoreUrl').hide();
        }
    }
</script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="content-header clearfix">
        <div class="pull-right">
            <button type="submit" name="save" class="btn bg-blue">
                <i class="fa fa-floppy-o"></i>
                @T("Admin.Common.Save")
            </button>
        </div>
    </div>

    <div class="content">
        <div class="form-horizontal">
            <div id="contactattribute-edit" class="nav-tabs-custom">
                <ul class="nav nav-tabs">
                    @Html.RenderBootstrapTabHeader("tab-general", @T("Plugin.Widgets.StoreLocator.Configuration.General"), true)
                    @Html.RenderBootstrapTabHeader("tab-locators", @T("Plugin.Widgets.StoreLocator.Configuration.Locators"))
                </ul>
                <div class="tab-content">
                    @Html.RenderBootstrapTabContent("tab-general", @TabGeneral(), true)
                    @Html.RenderBootstrapTabContent("tab-locators", @TabLocators())
                </div>
            </div>
        </div>
    </div>   
    
}

@helper TabGeneral()
{

    <div>
        <div class="form-group">
            <div class="col-md-3">
                @Html.NopLabelFor(model => model.googleApiKey)
            </div>
            <div class="col-md-9">
                @Html.NopEditorFor(model => model.googleApiKey)
                <br />
                <em>@T("Plugin.Widgets.StoreLocator.googleApiKey.Hint")</em>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3">
                @Html.NopLabelFor(model => model.defaultLat)
            </div>
            <div class="col-md-9">
                @Html.NopEditorFor(model => model.defaultLat)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3">
                @Html.NopLabelFor(model => model.defaultLng)
            </div>
            <div class="col-md-9">
                @Html.NopEditorFor(model => model.defaultLng)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3">
                @Html.NopLabelFor(model => model.defaultGlobalZoom)
            </div>
            <div class="col-md-9">
                @Html.NopEditorFor(model => model.defaultGlobalZoom)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3">
                @Html.NopLabelFor(model => model.defaultCityZoom)
            </div>
            <div class="col-md-9">
                @Html.NopEditorFor(model => model.defaultCityZoom)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3">
                @Html.NopLabelFor(model => model.defaultPointZoom)
            </div>
            <div class="col-md-9">
                @Html.NopEditorFor(model => model.defaultPointZoom)
            </div>
        </div>
        <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.InfoWindowPoint)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.InfoWindowPoint)
                    <br /><em>@T("Plugin.Widgets.StoreLocator.InfoPointToken.Hint")</em>
                </div>
        </div>
        <div class="form-group">
            <div class="col-md-3">
                @Html.NopLabelFor(model => model.ShowInfoPoints)
            </div>
            <div class="col-md-9">
                @Html.NopEditorFor(model => model.ShowInfoPoints)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3">
                @Html.NopLabelFor(model => model.InfoPoint)
            </div>
            <div class="col-md-9">
                @Html.NopEditorFor(model => model.InfoPoint)
                <br /><em>@T("Plugin.Widgets.StoreLocator.InfoPointToken.Hint")</em>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3">
                @Html.NopLabelFor(model => model.WidgetZone)
            </div>
            <div class="col-md-9">
                @Html.NopEditorFor(model => model.WidgetZone)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3">
                @Html.NopLabelFor(model => model.Page)
            </div>
            <div class="col-md-9">
                @Html.NopEditorFor(model => model.Page)
            </div>
        </div>
        <div class="form-group" id="trStoreUrl">
            <div class="col-md-3">
                <label>@T("Plugin.Widgets.StoreLocator.Url"):</label>
            </div>
            <div class="col-md-9">
                @{
                    var _webhelper = EngineContext.Current.Resolve<Nop.Core.IWebHelper>();
                    string url = new Uri(_webhelper.GetStoreLocation(false)) + @"Plugins/StoreLocators";
                }
                <a href="@url">@url</a>
            </div>
        </div>
    </div>
}

@helper TabLocators()
{

var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

            <div id="storeLocators-grid"></div>

            <script type="text/javascript">
                    $(document).ready(function () {
                        $("#storeLocators-grid").kendoGrid({
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "@Html.Raw(Url.Action("StoreLocatorsList", "StoreLocators", new RouteValueDictionary { { "Namespaces", "Nop.Plugin.Widgets.StoreLocator.Controllers" }, { "area", "" } }))",
                                        type: "POST",
                                        dataType: "json",
                                        data: addAntiForgeryToken
                                    },
                                    destroy: {
                                        url: "@Html.Raw(Url.Action("StoreLocatorsDelete", "StoreLocators", new RouteValueDictionary { { "Namespaces", "Nop.Plugin.Widgets.StoreLocator.Controllers" }, { "area", "" } }))",
                                        type: "POST",
                                        dataType: "json",
                                        data: addAntiForgeryToken
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors",
                                    model: {
                                        id: "Id"
                                    }
                                },
                                requestEnd: function (e) {
                                    if (e.type == "update") {
                                        this.read();
                                    }
                                },
                                error: function (e) {
                                    display_kendoui_grid_error(e);
                                    // Cancel the changes
                                    this.cancelChanges();
                                },
                                pageSize: @(defaultGridPageSize),
                                serverPaging: true,
                                serverFiltering: true,
                                serverSorting: true
                            },
                            pageable: {
                                refresh: true,
                                pageSizes: [@(gridPageSizes)]
                            },
                            editable: {
                                confirmation: false,
                                mode: "inline"
                            },
                            scrollable: false,
                            columns: [
                            {
                                field: "Point",
                                title: "@T("Plugins.Widgets.StoreLocator.Fields.Point")",
                                width: 100
                            }, {
                                field: "StoreLocatorName",
                                title: "@T("Plugins.Widgets.StoreLocator.Fields.StoreLocatorName")",
                                width: 150
                            },{
                                field: "CountryName",
                                title: "@T("Plugins.Widgets.StoreLocator.Fields.Country")",
                                width: 100
                            }, {
                                field: "StateProvinceName",
                                title: "@T("Plugins.Widgets.StoreLocator.Fields.StateProvince")",
                                width: 100
                            }, {
                                field: "ZipCode",
                                title: "@T("Plugins.Widgets.StoreLocator.Fields.ZipCode")",
                                width: 100
                            }, {
                                field: "City",
                                title: "@T("Plugins.Widgets.StoreLocator.Fields.City")",
                                width: 100
                            }, {
                                field: "Address",
                                title: "@T("Plugins.Widgets.StoreLocator.Fields.Address")",
                                width: 300
                            },
                            {
                                field: "Id",
                                title: "@T("Admin.Common.Edit")",
                                width: 100,
                                template: "<input type='submit' value='@T("Admin.Common.Edit")' onclick=\"javascript:OpenWindow('@Url.RouteUrl("Plugin.Widgets.StoreLocator.EditPopup")?id=#=Id#&btnId=btnRefresh&formId=storeLocator-form', 800, 400, true); return false;\" class='k-button' />"
                            },  {
                                command: { name: "destroy", text: "@T("Admin.Common.Delete")" },
                                title: "@T("Admin.Common.Delete")",
                                width: 100
                            }]
                        });
                    });
            </script>

<div style="border:solid 0px red;">
    @{
        var addNewUrl = Url.RouteUrl("Plugin.Widgets.StoreLocator.AddPopup") + "?btnId=btnRefresh&formId=storeLocator-form";
    }
    <input type="submit" id="btnAddNewOption" value="Add Store location"
           onclick="javascript:OpenWindow('@(addNewUrl)', 800, 450, true); return false;"
           class="k-button" />

    <input type="submit" id="btnRefresh" style="display: none" />
    <script type="text/javascript">
            $(document).ready(function () {
                $('#btnRefresh').click(function () {
                    var grid = $("#storeLocators-grid").data('kendoGrid');
                    grid.dataSource.read();
                    return false;
                });
            });
    </script>
</div>

}
